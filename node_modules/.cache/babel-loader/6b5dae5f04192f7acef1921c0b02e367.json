{"ast":null,"code":"var _jsxFileName = \"/Users/rahulkothwal/Desktop/REACT HOOKS FILES/FoodApp-HTTP_FORMS/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [loading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      setIsLoading(true);\n      const mealsFetched = [];\n\n      try {\n        const response = await fetch(\"https://react-meals-12cbb-default-rtdb.firebaseio.com/meals\");\n\n        if (!response.ok) {\n          throw new error(\"Something went Wrong!\");\n        }\n\n        const responseData = await response.json();\n\n        for (const mealId in responseData) {\n          const mealOBJ = {\n            id: mealId,\n            name: responseData[mealId].name,\n            description: responseData[mealId].description,\n            price: responseData[mealId].price\n          };\n          mealsFetched.push(mealOBJ);\n        }\n\n        setMeals(mealsFetched);\n      } catch (error) {\n        console.log(error.message);\n        setError(error.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchMeals();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.loading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"LOADING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    /*#__PURE__*/\n    _jsxDEV(\"section\", {\n      className: classes.mealError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"DoERJPDdpdppNW0+lGNdX69D/JQ=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/rahulkothwal/Desktop/REACT HOOKS FILES/FoodApp-HTTP_FORMS/src/components/Meals/AvailableMeals.js"],"names":["Card","MealItem","classes","useEffect","useState","AvailableMeals","meals","setMeals","loading","setIsLoading","error","setError","fetchMeals","mealsFetched","response","fetch","ok","responseData","json","mealId","mealOBJ","id","name","description","price","push","console","log","message","mealError","mealsList","map","meal"],"mappings":"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","sourcesContent":["import Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { useEffect, useState } from \"react\";\n\n\nconst AvailableMeals = () => {\n  const [meals , setMeals] = useState([]);\n  const [loading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n\n    const fetchMeals = async () => {\n      setIsLoading(true);\n      const mealsFetched = [];\n      try{\n        const response = await fetch(\n          \"https://react-meals-12cbb-default-rtdb.firebaseio.com/meals\"\n        )\n\n        if (!response.ok){\n          throw new error(\"Something went Wrong!\")\n        }\n\n      const responseData = await response.json();\n\n      for (const mealId in responseData) {\n        const mealOBJ = {\n          id: mealId,\n          name: responseData[mealId].name,\n          description: responseData[mealId].description,\n          price:responseData[mealId].price\n        }\n        mealsFetched.push(mealOBJ);\n      }\n      setMeals(mealsFetched);\n    } catch(error){\n      console.log(error.message);\n      setError(error.message);\n    }\n      setIsLoading(false);\n    };\n\n    fetchMeals();\n  },[]);\n\n  if (loading) {\n    return(\n      <section className={classes.loading}>\n        <p>LOADING</p>\n      </section>\n    )\n  }\n\n  if(error){\n    <section className={classes.mealError}>\n      <p>{error}</p>\n    </section>\n  }\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}