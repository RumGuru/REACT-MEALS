{"ast":null,"code":"var _jsxFileName = \"/Users/rahulkothwal/Desktop/MY-FOOD-APP/REACT-MEALS/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n  const [showCheckout, setShowCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem(item);\n  };\n\n  const orderClickHandler = event => {\n    setShowCheckout(true);\n  };\n\n  const checkoutCancelHandler = event => {\n    setShowCheckout(false);\n  };\n\n  const confirmOrderHandler = async userInfo => {\n    setIsSubmitting(true);\n    await fetch(\"https://react-meals-12cbb-default-rtdb.firebaseio.com/orderInformation.json\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        orderedMeals: cartCtx.items,\n        userInfo: userInfo\n      })\n    });\n    setIsSubmitting(false);\n    setSubmitted(true);\n    cartCtx.clearCart();\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n\n  const cartOrderActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderClickHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), showCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: confirmOrderHandler,\n      onCancel: checkoutCancelHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), !showCheckout && cartOrderActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n\n  const submitLoading = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Please Wait...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 25\n  }, this);\n\n  const successfullSubmitContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Order successfully sent!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes[\"button--alt\"],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [!isSubmitting && !submitted && cartModalContent, isSubmitting && submitLoading, submitted && !isSubmitting && successfullSubmitContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"TXxJOUGWcNPaCjIgRV23S/mvkxA=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/rahulkothwal/Desktop/MY-FOOD-APP/REACT-MEALS/src/components/Cart/Cart.js"],"names":["React","useContext","useState","Modal","CartItem","classes","CartContext","Checkout","Cart","props","cartCtx","showCheckout","setShowCheckout","isSubmitting","setIsSubmitting","submitted","setSubmitted","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","orderClickHandler","event","checkoutCancelHandler","confirmOrderHandler","userInfo","fetch","method","body","JSON","stringify","orderedMeals","clearCart","cartItems","map","name","amount","price","bind","cartOrderActions","actions","onClose","button","cartModalContent","total","submitLoading","successfullSubmitContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,OAAO,GAAGT,UAAU,CAACK,WAAD,CAA1B;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMe,WAAW,GAAI,IAAGP,OAAO,CAACO,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD;AACA,QAAMC,QAAQ,GAAGT,OAAO,CAACU,KAAR,CAAcC,MAAd,GAAuB,CAAxC;;AAEA,QAAMC,qBAAqB,GAAIC,EAAD,IAAQ;AACpCb,IAAAA,OAAO,CAACc,UAAR,CAAmBD,EAAnB;AACD,GAFD;;AAIA,QAAME,kBAAkB,GAAIC,IAAD,IAAU;AACnChB,IAAAA,OAAO,CAACiB,OAAR,CAAgBD,IAAhB;AACD,GAFD;;AAIA,QAAME,iBAAiB,GAAIC,KAAD,IAAW;AACnCjB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAFD;;AAIA,QAAMkB,qBAAqB,GAAID,KAAD,IAAW;AACvCjB,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD;;AAIA,QAAMmB,mBAAmB,GAAG,MAAOC,QAAP,IAAoB;AAC9ClB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA,UAAMmB,KAAK,CACT,6EADS,EAET;AACEC,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,YAAY,EAAE5B,OAAO,CAACU,KADH;AAEnBY,QAAAA,QAAQ,EAAEA;AAFS,OAAf;AAFR,KAFS,CAAX;AAUAlB,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAN,IAAAA,OAAO,CAAC6B,SAAR;AACD,GAfD;;AAiBA,QAAMC,SAAS,gBACb;AAAI,IAAA,SAAS,EAAEnC,OAAO,CAAC,YAAD,CAAtB;AAAA,cACGK,OAAO,CAACU,KAAR,CAAcqB,GAAd,CAAmBf,IAAD,iBACjB,QAAC,QAAD;AAEE,MAAA,IAAI,EAAEA,IAAI,CAACgB,IAFb;AAGE,MAAA,MAAM,EAAEhB,IAAI,CAACiB,MAHf;AAIE,MAAA,KAAK,EAAEjB,IAAI,CAACkB,KAJd;AAKE,MAAA,QAAQ,EAAEtB,qBAAqB,CAACuB,IAAtB,CAA2B,IAA3B,EAAiCnB,IAAI,CAACH,EAAtC,CALZ;AAME,MAAA,KAAK,EAAEE,kBAAkB,CAACoB,IAAnB,CAAwB,IAAxB,EAA8BnB,IAA9B;AANT,OACOA,IAAI,CAACH,EADZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAeA,QAAMuB,gBAAgB,gBACpB;AAAK,IAAA,SAAS,EAAEzC,OAAO,CAAC0C,OAAxB;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAE1C,OAAO,CAAC,aAAD,CAA1B;AAA2C,MAAA,OAAO,EAAEI,KAAK,CAACuC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIG7B,QAAQ,iBACP;AAAQ,MAAA,SAAS,EAAEd,OAAO,CAAC4C,MAA3B;AAAmC,MAAA,OAAO,EAAErB,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAaA,QAAMsB,gBAAgB,gBACpB,QAAC,KAAD,CAAO,QAAP;AAAA,eACGV,SADH,eAEE;AAAK,MAAA,SAAS,EAAEnC,OAAO,CAAC8C,KAAxB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOlC;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAMGN,YAAY,iBACX,QAAC,QAAD;AACE,MAAA,SAAS,EAAEoB,mBADb;AAEE,MAAA,QAAQ,EAAED;AAFZ;AAAA;AAAA;AAAA;AAAA,YAPJ,EAYG,CAACnB,YAAD,IAAiBmC,gBAZpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAiBA,QAAMM,aAAa,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,QAAMC,wBAAwB,gBAC5B,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEhD,OAAO,CAAC0C,OAAxB;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAE1C,OAAO,CAAC,aAAD,CAA1B;AAA2C,QAAA,OAAO,EAAEI,KAAK,CAACuC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAWA,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEvC,KAAK,CAACuC,OAAtB;AAAA,eACG,CAACnC,YAAD,IAAiB,CAACE,SAAlB,IAA+BmC,gBADlC,EAEGrC,YAAY,IAAIuC,aAFnB,EAGGrC,SAAS,IAAI,CAACF,YAAd,IAA8BwC,wBAHjC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA3GD;;GAAM7C,I;;KAAAA,I;AA6GN,eAAeA,IAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\n\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport Checkout from \"./Checkout\";\n\nconst Cart = (props) => {\n  const cartCtx = useContext(CartContext);\n  const [showCheckout, setShowCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = (item) => {\n    cartCtx.addItem(item);\n  };\n\n  const orderClickHandler = (event) => {\n    setShowCheckout(true);\n  };\n\n  const checkoutCancelHandler = (event) => {\n    setShowCheckout(false);\n  };\n\n  const confirmOrderHandler = async (userInfo) => {\n    setIsSubmitting(true);\n    await fetch(\n      \"https://react-meals-12cbb-default-rtdb.firebaseio.com/orderInformation.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          orderedMeals: cartCtx.items,\n          userInfo: userInfo,\n        }),\n      }\n    );\n    setIsSubmitting(false);\n    setSubmitted(true);\n    cartCtx.clearCart();\n  };\n\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n\n  const cartOrderActions = (\n    <div className={classes.actions}>\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n        Close\n      </button>\n      {hasItems && (\n        <button className={classes.button} onClick={orderClickHandler}>\n          Order\n        </button>\n      )}\n    </div>\n  );\n\n  const cartModalContent = (\n    <React.Fragment>\n      {cartItems}\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{totalAmount}</span>\n      </div>\n      {showCheckout && (\n        <Checkout\n          onConfirm={confirmOrderHandler}\n          onCancel={checkoutCancelHandler}\n        />\n      )}\n      {!showCheckout && cartOrderActions}\n    </React.Fragment>\n  );\n\n  const submitLoading = <p>Please Wait...</p>;\n\n  const successfullSubmitContent = (\n    <React.Fragment>\n      <p>Order successfully sent!</p>\n      <div className={classes.actions}>\n        <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n          Close\n        </button>\n      </div>\n    </React.Fragment>\n  );\n\n  return (\n    <Modal onClose={props.onClose}>\n      {!isSubmitting && !submitted && cartModalContent}\n      {isSubmitting && submitLoading}\n      {submitted && !isSubmitting && successfullSubmitContent}\n    </Modal>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}