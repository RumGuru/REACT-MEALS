{"ast":null,"code":"var _jsxFileName = \"/Users/rahulkothwal/Desktop/MY-FOOD-APP/REACT-MEALS/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isSixChars = value => value.trim().length === 6;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    postalCode: true,\n    city: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const nameIsValid = !isEmpty(enteredName);\n    const streetIsValid = !isEmpty(enteredStreet);\n    const postalCodeIsValid = isSixChars(enteredPostalCode);\n    const cityIsValid = !isEmpty(enteredCity);\n    setFormInputValidity({\n      name: nameIsValid,\n      street: streetIsValid,\n      postalCode: postalCodeIsValid,\n      city: cityIsValid\n    });\n    const formIsValid = nameIsValid && streetIsValid && postalCodeIsValid && cityIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      postalCode: enteredPostalCode,\n      city: enteredCity\n    });\n  };\n\n  const nameInputClass = `${classes.control} ${!formInputValidity.name && classes.invalid}`;\n  const streetInputClass = `${classes.control} ${!formInputValidity.street && classes.invalid}`;\n  const postalCodeInputClass = `${classes.control} ${!formInputValidity.postalCode && classes.invalid}`;\n  const cityInputClass = `${classes.control} ${!formInputValidity.city && classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), !formInputValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), !formInputValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), !formInputValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"SmpBppF6dRY8/tBgMX6LI6ZzdmM=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/rahulkothwal/Desktop/MY-FOOD-APP/REACT-MEALS/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isSixChars","length","Checkout","props","formInputValidity","setFormInputValidity","name","street","postalCode","city","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","nameIsValid","streetIsValid","postalCodeIsValid","cityIsValid","formIsValid","onConfirm","nameInputClass","control","invalid","streetInputClass","postalCodeInputClass","cityInputClass","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\n\nconst isEmpty = (value) => value.trim() === \"\";\nconst isSixChars = (value) => value.trim().length === 6;\n\nconst Checkout = (props) => {\n    const [formInputValidity , setFormInputValidity] = useState({\n        name:true,\n        street:true,\n        postalCode:true,\n        city:true\n    });\n\n    const nameInputRef = useRef();\n    const streetInputRef = useRef();\n    const postalCodeInputRef = useRef();\n    const cityInputRef = useRef();\n\n\n    const confirmHandler = (event) => {\n        event.preventDefault();\n\n        const enteredName = nameInputRef.current.value;\n        const enteredStreet = streetInputRef.current.value;\n        const enteredPostalCode = postalCodeInputRef.current.value;\n        const enteredCity = cityInputRef.current.value;\n\n        const nameIsValid = !isEmpty(enteredName);\n        const streetIsValid = !isEmpty(enteredStreet);\n        const postalCodeIsValid = isSixChars(enteredPostalCode);\n        const cityIsValid = !isEmpty(enteredCity);\n\n        setFormInputValidity({\n            name:nameIsValid,\n            street:streetIsValid,\n            postalCode:postalCodeIsValid,\n            city:cityIsValid\n        });\n\n\n        const formIsValid = nameIsValid && streetIsValid && postalCodeIsValid && cityIsValid;\n\n        if (!formIsValid){\n            return\n        }\n\n        props.onConfirm({\n          name:enteredName,\n          street:enteredStreet,\n          postalCode:enteredPostalCode,\n          city:enteredCity\n        })\n\n    }\n\n    const nameInputClass = `${classes.control} ${!formInputValidity.name && classes.invalid}`;\n    const streetInputClass = `${classes.control} ${!formInputValidity.street && classes.invalid}`;\n    const postalCodeInputClass = `${classes.control} ${!formInputValidity.postalCode && classes.invalid}`;\n    const cityInputClass = `${classes.control} ${!formInputValidity.city && classes.invalid}`;\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameInputClass}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef}/>\n        {!formInputValidity.name && <p>Please enter a valid Name</p>}\n      </div>\n      <div className={streetInputClass}>\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\n        {!formInputValidity.street && <p>Please enter a valid Street</p>}\n      </div>\n      <div className={postalCodeInputClass}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\n        {!formInputValidity.postalCode && <p>Please enter a valid Postal Code</p>}\n      </div>\n      <div className={cityInputClass}>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\n        {!formInputValidity.city && <p>Please enter a valid City</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}